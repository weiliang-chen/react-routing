{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\udemy\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, redirect, useRouteLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \" Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 34\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \" Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 34\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected id'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message: 'Could not fetch errors'}\n    // throw new Response(JSON.stringify({message: 'Could not fetch events.'}), {\n    //     status: 500\n    // });\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    event: await loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event for selected event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Await","defer","json","redirect","useRouteLoaderData","EventItem","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","_ref","request","params","eventId","action","_ref2","method","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/udemy/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Await, defer, json, redirect, useRouteLoaderData } from 'react-router-dom'\r\nimport EventItem from '../components/EventItem';\r\nimport EventsList from '../components/EventsList';\r\nimport { Suspense } from 'react';\r\n\r\nfunction EventDetailPage() {\r\n\r\n    const { event, events } = useRouteLoaderData('event-detail');\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback= {<p style={{textAlign: 'center'}}> Loading ...</p>}>\r\n                <Await resolve={event}>\r\n                    {loadedEvent => <EventItem event={loadedEvent} />}\r\n                </Await>\r\n            </Suspense>\r\n            <Suspense fallback= {<p style={{textAlign: 'center'}}> Loading ...</p>}>\r\n                <Await resolve={events}>\r\n                    {loadedEvents => <EventsList events={loadedEvents} />}\r\n                </Await>\r\n            </Suspense>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventDetailPage\r\n\r\nasync function loadEvent(id) {\r\n    const response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n    if (!response.ok) {\r\n        throw json({ message: 'Could not fetch details for selected id' }, {\r\n            status: 500\r\n        })\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData.event;\r\n    }\r\n}\r\n\r\nasync function loadEvents() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n        // return {isError: true, message: 'Could not fetch errors'}\r\n        // throw new Response(JSON.stringify({message: 'Could not fetch events.'}), {\r\n        //     status: 500\r\n        // });\r\n        throw json(\r\n            { message: 'Could not fetch events.' },\r\n            {\r\n                status: 500\r\n            })\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData.events;\r\n    }\r\n}\r\n\r\n\r\nexport async function loader({ request, params }) {\r\n    const id = params.eventId;\r\n\r\n    return defer({\r\n        event: await loadEvent(id),\r\n        events: loadEvents()\r\n    })\r\n}\r\n\r\n\r\nexport async function action({ request, params }) {\r\n    const id = params.eventId;\r\n    const response = await fetch('http://localhost:8080/events/' + id, {\r\n        method: request.method\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw json({ message: 'Could not delete event for selected event' }, {\r\n            status: 500\r\n        })\r\n    }\r\n\r\n    return redirect('/events')\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
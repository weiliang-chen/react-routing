{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\udemy\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport EventPage from './pages/Events';\nimport EventDetailPage from './pages/EvemtDetail';\nimport EditEventPage from './pages/EditEvent';\nimport NewEventPage from './pages/NewEvent';\nimport RootLayOut from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayOut, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 14\n  }, this),\n  // errorElement: <ErrorPage />,\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }, this)\n  },\n  // path : '/'\n  {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 35\n      }, this),\n      loader: async () => {\n        const response = await fetch('http://localhost:8080/events');\n        if (!response.ok) {\n          //\n        } else {\n          const resData = await response.json();\n          return resData.events;\n        }\n      }\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: ':eventId',\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: ':eventId/edit',\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 45\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventPage","EventDetailPage","EditEventPage","NewEventPage","RootLayOut","EventsRootLayout","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","loader","response","fetch","ok","resData","json","events","App","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/udemy/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom'\nimport HomePage from './pages/Home';\nimport EventPage from './pages/Events';\nimport EventDetailPage from './pages/EvemtDetail';\nimport EditEventPage from './pages/EditEvent';\nimport NewEventPage from './pages/NewEvent';\nimport RootLayOut from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <RootLayOut />,\n    // errorElement: <ErrorPage />,\n    children: [\n      { index: true, element: <HomePage /> }, // path : '/'\n      {\n        path: 'events',\n        element: <EventsRootLayout />,\n        children: [\n          {\n            index: true, element: <EventPage />, loader: async () => {\n              const response = await fetch('http://localhost:8080/events');\n\n              if (!response.ok) {\n                //\n              } else {\n                const resData = await response.json();\n                return resData.events;\n              }\n            }\n          },\n          { path: 'new', element: <NewEventPage /> },\n          { path: ':eventId', element: <EventDetailPage /> },\n          { path: ':eventId/edit', element: <EditEventPage /> }\n        ]\n      },\n\n    ]\n  }\n])\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CACjC;EACEY,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACH,UAAU;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvB;EACAC,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEN,OAAO,eAAEH,OAAA,CAACR,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC;EAAE;EACxC;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEH,OAAA,CAACF,gBAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC7BC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MAAEN,OAAO,eAAEH,OAAA,CAACP,SAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAEG,MAAM,EAAE,MAAAA,CAAA,KAAY;QACvD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB;QAAA,CACD,MAAM;UACL,MAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UACrC,OAAOD,OAAO,CAACE,MAAM;QACvB;MACF;IACF,CAAC,EACD;MAAEd,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACJ,YAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAC1C;MAAEL,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACN,eAAe;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAClD;MAAEL,IAAI,EAAE,eAAe;MAAEC,OAAO,eAAEH,OAAA,CAACL,aAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC;EAEzD,CAAC;AAGL,CAAC,CACF,CAAC;AAEF,SAASU,GAAGA,CAAA,EAAG;EACb,oBAAOjB,OAAA,CAACT,cAAc;IAACU,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACW,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}